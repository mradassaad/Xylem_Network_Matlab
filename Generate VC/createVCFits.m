function [fitresult, gof] = createVCFits(Pressures, PLCmean)
%CREATEFITS(PRESSURES,PLCMEAN)
%  Create fits.
%
%  Data for 'WeibullCDF' fit:
%      X Input : Pressures
%      Y Output: PLCmean
%  Data for 'Logistic' fit:
%      X Input : Pressures
%      Y Output: PLCmean
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 16-Nov-2017 10:16:24

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'WeibullCDF'.
[xData, yData] = prepareCurveData( Pressures, PLCmean );

% Set up fittype and options.
ft = fittype( '1-exp(-(P./lam).^k)', 'independent', 'P', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.962540279944202 0.846917498370662];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'WeibullCDF' );
% h = plot( fitresult{1}, xData, yData );
% legend( h, 'PLCmean vs. Pressures', 'WeibullCDF', 'Location', 'NorthEast' );
% % Label axes
% xlabel Pressures
% ylabel PLCmean
% grid on

%% Fit: 'Logistic'.
[xData, yData] = prepareCurveData( Pressures, PLCmean );

% Set up fittype and options.
ft = fittype( '1./(1+exp(-a.*(P-P50)))', 'independent', 'P', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.834939216941472 0.482941689907127];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'Logistic' );
% h = plot( fitresult{2}, xData, yData );
% legend( h, 'PLCmean vs. Pressures', 'Logistic', 'Location', 'NorthEast' );
% % Label axes
% xlabel Pressures
% ylabel PLCmean
% grid on


